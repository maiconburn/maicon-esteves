{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\n\nvar ChatResume = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChatResume, _React$Component);\n\n  var _super = _createSuper(ChatResume);\n\n  function ChatResume(props) {\n    var _this;\n\n    _classCallCheck(this, ChatResume);\n\n    _this = _super.call(this, props);\n    _this.cf = null; // <-- Conversational Form ref\n\n    return _this;\n  }\n\n  _createClass(ChatResume, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // add Conversational Form info\n      this.refs.name.setAttribute('cf-questions', \"Your name?\");\n      this.refs.email.setAttribute('cf-questions', \"Your email?\");\n      this.refs.description.setAttribute('cf-questions', \"What is description?\");\n      this.cf = window.cf.ConversationalForm.startTheConversation({\n        formEl: this.refs.form,\n        context: document.getElementById(\"cf-context\"),\n        flowStepCallback: function flowStepCallback(dto, success, error) {\n          success();\n        },\n        submitCallback: function submitCallback() {\n          // this callback could also be added to the React.createElement it self...\n          alert(\"You made it!\");\n          console.log(\"Form submitted...\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement('form', {\n        id: \"form\",\n        ref: \"form\",\n        className: 'form'\n      }, React.createElement('input', {\n        type: 'text',\n        ref: \"name\",\n        placeholder: 'Name (required)',\n        defaultValue: this.props.name\n      }), React.createElement('input', {\n        type: 'email',\n        ref: \"email\",\n        placeholder: 'Email',\n        defaultValue: this.props.email\n      }), React.createElement('textarea', {\n        placeholder: 'Description',\n        ref: \"description\",\n        defaultValue: this.props.description\n      }), React.createElement('button', {\n        type: 'submit'\n      }, \"Submit\"));\n    }\n  }]);\n\n  return ChatResume;\n}(React.Component);\n\n;\nReactDOM.render(React.createElement(ChatResume, {\n  name: \"Input name..\",\n  email: \"Input email..\",\n  description: \"Input description..\"\n}), document.getElementsByClassName('form-outer')[0]);","map":{"version":3,"sources":["/Users/maiconesteves/Projects/portfolio/components/ChatResume.js"],"names":["React","ChatResume","props","cf","refs","name","setAttribute","email","description","window","ConversationalForm","startTheConversation","formEl","form","context","document","getElementById","flowStepCallback","dto","success","error","submitCallback","alert","console","log","createElement","id","ref","className","type","placeholder","defaultValue","Component","ReactDOM","render","getElementsByClassName"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,EAAL,GAAU,IAAV,CAFe,CAEC;;AAFD;AAGlB;;;;wCACkB;AACf;AACA,WAAKC,IAAL,CAAUC,IAAV,CAAeC,YAAf,CAA4B,cAA5B,EAA4C,YAA5C;AACA,WAAKF,IAAL,CAAUG,KAAV,CAAgBD,YAAhB,CAA6B,cAA7B,EAA6C,aAA7C;AACA,WAAKF,IAAL,CAAUI,WAAV,CAAsBF,YAAtB,CAAmC,cAAnC,EAAmD,sBAAnD;AAEA,WAAKH,EAAL,GAAUM,MAAM,CAACN,EAAP,CAAUO,kBAAV,CAA6BC,oBAA7B,CAAkD;AACxDC,QAAAA,MAAM,EAAE,KAAKR,IAAL,CAAUS,IADsC;AAExDC,QAAAA,OAAO,EAAEC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAF+C;AAGxDC,QAAAA,gBAAgB,EAAE,0BAASC,GAAT,EAAcC,OAAd,EAAuBC,KAAvB,EAA6B;AAC3CD,UAAAA,OAAO;AACV,SALuD;AAMxDE,QAAAA,cAAc,EAAE,0BAAU;AACtB;AACAC,UAAAA,KAAK,CAAC,cAAD,CAAL;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AAVuD,OAAlD,CAAV;AAYH;;;6BACQ;AACL,aAAOxB,KAAK,CAACyB,aAAN,CAAoB,MAApB,EAA4B;AAC/BC,QAAAA,EAAE,EAAE,MAD2B;AAE/BC,QAAAA,GAAG,EAAE,MAF0B;AAG/BC,QAAAA,SAAS,EAAE;AAHoB,OAA5B,EAKH5B,KAAK,CAACyB,aAAN,CAAoB,OAApB,EAA6B;AACzBI,QAAAA,IAAI,EAAE,MADmB;AAEzBF,QAAAA,GAAG,EAAE,MAFoB;AAGzBG,QAAAA,WAAW,EAAE,iBAHY;AAIzBC,QAAAA,YAAY,EAAE,KAAK7B,KAAL,CAAWG;AAJA,OAA7B,CALG,EAWHL,KAAK,CAACyB,aAAN,CAAoB,OAApB,EAA6B;AACzBI,QAAAA,IAAI,EAAE,OADmB;AAEzBF,QAAAA,GAAG,EAAE,OAFoB;AAGzBG,QAAAA,WAAW,EAAE,OAHY;AAIzBC,QAAAA,YAAY,EAAE,KAAK7B,KAAL,CAAWK;AAJA,OAA7B,CAXG,EAiBHP,KAAK,CAACyB,aAAN,CAAoB,UAApB,EAAgC;AAC5BK,QAAAA,WAAW,EAAE,aADe;AAE5BH,QAAAA,GAAG,EAAE,aAFuB;AAG5BI,QAAAA,YAAY,EAAE,KAAK7B,KAAL,CAAWM;AAHG,OAAhC,CAjBG,EAsBHR,KAAK,CAACyB,aAAN,CAAoB,QAApB,EAA8B;AAACI,QAAAA,IAAI,EAAE;AAAP,OAA9B,EAAgD,QAAhD,CAtBG,CAAP;AAwBH;;;;EAjDsB7B,KAAK,CAACgC,S;;AAkD9B;AAEDC,QAAQ,CAACC,MAAT,CAAgBlC,KAAK,CAACyB,aAAN,CAAoBxB,UAApB,EAAgC;AAC9CI,EAAAA,IAAI,EAAE,cADwC;AAE9CE,EAAAA,KAAK,EAAE,eAFuC;AAG9CC,EAAAA,WAAW,EAAE;AAHiC,CAAhC,CAAhB,EAIIO,QAAQ,CAACoB,sBAAT,CAAgC,YAAhC,EAA8C,CAA9C,CAJJ","sourcesContent":["import React from 'react'\n\n\nclass ChatResume extends React.Component {\n  constructor(props) {\n      super(props);\n      this.cf = null; // <-- Conversational Form ref\n  }\n  componentDidMount(){\n      // add Conversational Form info\n      this.refs.name.setAttribute('cf-questions', \"Your name?\");\n      this.refs.email.setAttribute('cf-questions', \"Your email?\");\n      this.refs.description.setAttribute('cf-questions', \"What is description?\");\n\n      this.cf = window.cf.ConversationalForm.startTheConversation({\n          formEl: this.refs.form,\n          context: document.getElementById(\"cf-context\"),\n          flowStepCallback: function(dto, success, error){\n              success();\n          },\n          submitCallback: function(){\n              // this callback could also be added to the React.createElement it self...\n              alert(\"You made it!\")\n              console.log(\"Form submitted...\");\n          }\n      });\n  }\n  render() {\n      return React.createElement('form', {\n          id: \"form\",\n          ref: \"form\",\n          className: 'form'\n      },\n          React.createElement('input', {\n              type: 'text',\n              ref: \"name\",\n              placeholder: 'Name (required)',\n              defaultValue: this.props.name,\n          }),\n          React.createElement('input', {\n              type: 'email',\n              ref: \"email\",\n              placeholder: 'Email',\n              defaultValue: this.props.email,\n          }),\n          React.createElement('textarea', {\n              placeholder: 'Description',\n              ref: \"description\",\n              defaultValue: this.props.description,\n          }),\n          React.createElement('button', {type: 'submit'}, \"Submit\")\n      )\n  }\n};\n\nReactDOM.render(React.createElement(ChatResume, {\n  name: \"Input name..\",\n  email: \"Input email..\",\n  description: \"Input description..\",\n}), document.getElementsByClassName('form-outer')[0]);"]},"metadata":{},"sourceType":"module"}