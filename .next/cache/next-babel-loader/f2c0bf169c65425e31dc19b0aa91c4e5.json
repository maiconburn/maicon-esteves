{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/maiconesteves/Projects/portfolio/components/CvChat.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nvar theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Roboto',\n  headerBgColor: '#2274A5',\n  headerFontColor: '#fff',\n  headerFontSize: '18px',\n  botBubbleColor: '#2274A5',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\nvar steps = [{\n  id: '1',\n  message: 'What is your name?',\n  trigger: 'name'\n}, {\n  id: 'name',\n  user: true,\n  trigger: '3'\n}, {\n  id: '3',\n  message: 'Hi {previousValue}! What is your gender?',\n  trigger: 'gender'\n}, {\n  id: 'gender',\n  options: [{\n    value: 'male',\n    label: 'Male',\n    trigger: '5'\n  }, {\n    value: 'female',\n    label: 'Female',\n    trigger: '5'\n  }]\n}, {\n  id: '5',\n  message: 'How old are you?',\n  trigger: 'age'\n}, {\n  id: 'age',\n  user: true,\n  trigger: '7',\n  validator: function validator(value) {\n    if (isNaN(value)) {\n      return 'value must be a number';\n    } else if (value < 0) {\n      return 'value must be positive';\n    } else if (value > 120) {\n      return \"\".concat(value, \"? Come on!\");\n    }\n\n    return true;\n  }\n}, {\n  id: '7',\n  message: 'Great! Check out your summary',\n  trigger: 'review'\n}, {\n  id: 'review',\n  component: __jsx(Review, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 18\n    }\n  }),\n  asMessage: true,\n  trigger: 'update'\n}, {\n  id: 'update',\n  message: 'Would you like to update some field?',\n  trigger: 'update-question'\n}, {\n  id: 'update-question',\n  options: [{\n    value: 'yes',\n    label: 'Yes',\n    trigger: 'update-yes'\n  }, {\n    value: 'no',\n    label: 'No',\n    trigger: 'end-message'\n  }]\n}, {\n  id: 'update-yes',\n  message: 'What field would you like to update?',\n  trigger: 'update-fields'\n}, {\n  id: 'update-fields',\n  options: [{\n    value: 'name',\n    label: 'Name',\n    trigger: 'update-name'\n  }, {\n    value: 'gender',\n    label: 'Gender',\n    trigger: 'update-gender'\n  }, {\n    value: 'age',\n    label: 'Age',\n    trigger: 'update-age'\n  }]\n}, {\n  id: 'update-name',\n  update: 'name',\n  trigger: '7'\n}, {\n  id: 'update-gender',\n  update: 'gender',\n  trigger: '7'\n}, {\n  id: 'update-age',\n  update: 'age',\n  trigger: '7'\n}, {\n  id: 'end-message',\n  message: 'Thanks! Your data was submitted successfully!',\n  end: true\n}];\n\nvar Review = /*#__PURE__*/function (_Component) {\n  _inherits(Review, _Component);\n\n  var _super = _createSuper(Review);\n\n  function Review(props) {\n    var _this;\n\n    _classCallCheck(this, Review);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: '',\n      gender: '',\n      age: ''\n    };\n    return _this;\n  }\n\n  _createClass(Review, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var steps = this.props.steps;\n      var name = steps.name,\n          gender = steps.gender,\n          age = steps.age;\n      this.setState({\n        name: name,\n        gender: gender,\n        age: age\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          gender = _this$state.gender,\n          age = _this$state.age;\n      return __jsx(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, \"Summary\"), __jsx(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, \"Name\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, name.value)), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }, \"Gender\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, gender.value)), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }, \"Age\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }, age.value)))));\n    }\n  }]);\n\n  return Review;\n}(Component);\n\nReview.propTypes = {\n  steps: PropTypes.object\n};\nReview.defaultProps = {\n  steps: undefined\n};\n\nvar CvChat = /*#__PURE__*/function (_Component2) {\n  _inherits(CvChat, _Component2);\n\n  var _super2 = _createSuper(CvChat);\n\n  function CvChat() {\n    _classCallCheck(this, CvChat);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(CvChat, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, __jsx(ChatBot, {\n        steps: steps,\n        className: \"chatBot\",\n        botAvatar: \"/img/maicon.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }), \";\");\n    }\n  }]);\n\n  return CvChat;\n}(Component);\n\nexport default CvChat;","map":{"version":3,"sources":["/Users/maiconesteves/Projects/portfolio/components/CvChat.js"],"names":["React","Component","PropTypes","ChatBot","ThemeProvider","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","steps","id","message","trigger","user","options","value","label","validator","isNaN","component","asMessage","update","end","Review","props","state","name","gender","age","setState","width","propTypes","object","defaultProps","undefined","CvChat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ChatBot from 'react-simple-chatbot'\nimport { ThemeProvider } from 'styled-components'\n\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Roboto',\n  headerBgColor: '#2274A5',\n  headerFontColor: '#fff',\n  headerFontSize: '18px',\n  botBubbleColor: '#2274A5',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n}\n\nconst steps = [\n    {\n      id: '1',\n      message: 'What is your name?',\n      trigger: 'name',\n    },\n    {\n      id: 'name',\n      user: true,\n      trigger: '3',\n    },\n    {\n      id: '3',\n      message: 'Hi {previousValue}! What is your gender?',\n      trigger: 'gender',\n    },\n    {\n      id: 'gender',\n      options: [\n        { value: 'male', label: 'Male', trigger: '5' },\n        { value: 'female', label: 'Female', trigger: '5' },\n      ],\n    },\n    {\n      id: '5',\n      message: 'How old are you?',\n      trigger: 'age',\n    },\n    {\n      id: 'age',\n      user: true,\n      trigger: '7',\n      validator: (value) => {\n        if (isNaN(value)) {\n          return 'value must be a number';\n        } else if (value < 0) {\n          return 'value must be positive';\n        } else if (value > 120) {\n          return `${value}? Come on!`;\n        }\n\n        return true;\n      },\n    },\n    {\n      id: '7',\n      message: 'Great! Check out your summary',\n      trigger: 'review',\n    },\n    {\n      id: 'review',\n      component: <Review />,\n      asMessage: true,\n      trigger: 'update',\n    },\n    {\n      id: 'update',\n      message: 'Would you like to update some field?',\n      trigger: 'update-question',\n    },\n    {\n      id: 'update-question',\n      options: [\n        { value: 'yes', label: 'Yes', trigger: 'update-yes' },\n        { value: 'no', label: 'No', trigger: 'end-message' },\n      ],\n    },\n    {\n      id: 'update-yes',\n      message: 'What field would you like to update?',\n      trigger: 'update-fields',\n    },\n    {\n      id: 'update-fields',\n      options: [\n        { value: 'name', label: 'Name', trigger: 'update-name' },\n        { value: 'gender', label: 'Gender', trigger: 'update-gender' },\n        { value: 'age', label: 'Age', trigger: 'update-age' },\n      ],\n    },\n    {\n      id: 'update-name',\n      update: 'name',\n      trigger: '7',\n    },\n    {\n      id: 'update-gender',\n      update: 'gender',\n      trigger: '7',\n    },\n    {\n      id: 'update-age',\n      update: 'age',\n      trigger: '7',\n    },\n    {\n      id: 'end-message',\n      message: 'Thanks! Your data was submitted successfully!',\n      end: true,\n    },\n]\n\nclass Review extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      gender: '',\n      age: '',\n    };\n  }\n\n  componentWillMount() {\n    const { steps } = this.props;\n    const { name, gender, age } = steps\n\n    this.setState({ name, gender, age })\n  }\n\n  render() {\n    const { name, gender, age } = this.state\n    return (\n      <div style={{ width: '100%' }}>\n        <h3>Summary</h3>\n        <table>\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{name.value}</td>\n            </tr>\n            <tr>\n              <td>Gender</td>\n              <td>{gender.value}</td>\n            </tr>\n            <tr>\n              <td>Age</td>\n              <td>{age.value}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nReview.propTypes = {\n  steps: PropTypes.object,\n};\n\nReview.defaultProps = {\n  steps: undefined,\n};\n\nclass CvChat extends Component {\n  render() {\n    return (\n        <ThemeProvider theme={theme}>\n            <ChatBot steps={steps} className=\"chatBot\" botAvatar=\"/img/maicon.png\" />;\n        </ThemeProvider>\n    )\n  }\n}\n\nexport default CvChat"]},"metadata":{},"sourceType":"module"}