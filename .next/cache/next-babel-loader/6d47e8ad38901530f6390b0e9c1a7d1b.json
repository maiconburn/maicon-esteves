{"ast":null,"code":"var _jsxFileName = \"/Users/maiconesteves/Projects/portfolio/pages/_document.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport theme from '../src/theme';\nexport default class MyDocument extends Document {\n  render() {\n    return __jsx(Html, {\n      lang: \"en\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"My Portfolio\"), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"initial-scale=1.0, width=device-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: theme.palette.primary.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), __jsx(\"link\", {\n      href: \"https://fonts.googleapis.com/css2?family=Raleway&display=swap\",\n      rel: \"stylesheet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), __jsx(\"link\", {\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\",\n      rel: \"stylesheet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })), __jsx(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), __jsx(NextScript, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })));\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect(__jsx(App, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread({}, initialProps, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()]\n  });\n};","map":{"version":3,"sources":["/Users/maiconesteves/Projects/portfolio/pages/_document.js"],"names":["React","Document","Html","Head","Main","NextScript","ServerStyleSheets","theme","MyDocument","render","palette","primary","main","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","Children","toArray","getStyleElement"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,eAAe,MAAMC,UAAN,SAAyBP,QAAzB,CAAkC;AAC/CQ,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,uCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAcC,OAAd,CAAsBC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAM,MAAA,IAAI,EAAC,+DAAX;AAA2E,MAAA,GAAG,EAAC,YAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAM,MAAA,IAAI,EAAC,6EAAX;AAAyF,MAAA,GAAG,EAAC,YAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,CADF;AAeD;;AAjB8C;;AAoBjDJ,UAAU,CAACK,eAAX,GAA6B,MAAOC,GAAP,IAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,MAAM,GAAG,IAAIT,iBAAJ,EAAf;AACA,QAAMU,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,IAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IAAWL,MAAM,CAACM,OAAP,CAAe,MAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAf;AADf,GAAD,CADpB;;AAKA,QAAME,YAAY,GAAG,MAAMrB,QAAQ,CAACY,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,2BACKQ,YADL;AAEE;AACAC,IAAAA,MAAM,EAAE,CAAC,GAAGvB,KAAK,CAACwB,QAAN,CAAeC,OAAf,CAAuBH,YAAY,CAACC,MAApC,CAAJ,EAAiDR,MAAM,CAACW,eAAP,EAAjD;AAHV;AAKD,CAvCD","sourcesContent":["import React from 'react'\nimport Document, { Html, Head, Main, NextScript } from 'next/document'\nimport { ServerStyleSheets } from '@material-ui/core/styles'\nimport theme from '../src/theme'\n\nexport default class MyDocument extends Document {\n  render() {\n    return (\n      <Html lang=\"en\">\n        <Head>\n            <title>My Portfolio</title>\n            <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" /> \n            <meta name=\"theme-color\" content={theme.palette.primary.main} />\n            <link href=\"https://fonts.googleapis.com/css2?family=Raleway&display=swap\" rel=\"stylesheet\" />\n            <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" rel=\"stylesheet\" />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n\nMyDocument.getInitialProps = async (ctx) => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets()\n  const originalRenderPage = ctx.renderPage\n\n  ctx.renderPage = () =>\n    originalRenderPage({\n      enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\n    });\n\n  const initialProps = await Document.getInitialProps(ctx);\n\n  return {\n    ...initialProps,\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()],\n  }\n}"]},"metadata":{},"sourceType":"module"}