{"ast":null,"code":"var _jsxFileName = \"/Users/maiconesteves/Projects/portfolio/components/CvChat.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Roboto',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '18px',\n  botBubbleColor: '#2274A5',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\n\nclass Review extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      gender: '',\n      age: ''\n    };\n  }\n\n  componentWillMount() {\n    const {\n      steps\n    } = this.props;\n    const {\n      name,\n      gender,\n      age\n    } = steps;\n    this.setState({\n      name,\n      gender,\n      age\n    });\n  }\n\n  render() {\n    const {\n      name,\n      gender,\n      age\n    } = this.state;\n    return __jsx(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Summary\"), __jsx(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Name\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, name.value)), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, \"Gender\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, gender.value)), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"Age\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, age.value)))));\n  }\n\n}\n\nReview.propTypes = {\n  steps: PropTypes.object\n};\nReview.defaultProps = {\n  steps: undefined\n};\nconst steps = [{\n  id: '1',\n  message: 'What is your name?',\n  trigger: 'name'\n}, {\n  id: 'name',\n  user: true,\n  trigger: '3'\n}, {\n  id: '3',\n  message: 'Hi {previousValue}! What is your gender?',\n  trigger: 'gender'\n}, {\n  id: 'gender',\n  options: [{\n    value: 'male',\n    label: 'Male',\n    trigger: '5'\n  }, {\n    value: 'female',\n    label: 'Female',\n    trigger: '5'\n  }]\n}, {\n  id: '5',\n  message: 'How old are you?',\n  trigger: 'age'\n}, {\n  id: 'age',\n  user: true,\n  trigger: '7',\n  validator: value => {\n    if (isNaN(value)) {\n      return 'value must be a number';\n    } else if (value < 0) {\n      return 'value must be positive';\n    } else if (value > 120) {\n      return `${value}? Come on!`;\n    }\n\n    return true;\n  }\n}, {\n  id: '7',\n  message: 'Great! Check out your summary',\n  trigger: 'review'\n}, {\n  id: 'review',\n  component: __jsx(Review, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 18\n    }\n  }),\n  asMessage: true,\n  trigger: 'update'\n}, {\n  id: 'update',\n  message: 'Would you like to update some field?',\n  trigger: 'update-question'\n}, {\n  id: 'update-question',\n  options: [{\n    value: 'yes',\n    label: 'Yes',\n    trigger: 'update-yes'\n  }, {\n    value: 'no',\n    label: 'No',\n    trigger: 'end-message'\n  }]\n}, {\n  id: 'update-yes',\n  message: 'What field would you like to update?',\n  trigger: 'update-fields'\n}, {\n  id: 'update-fields',\n  options: [{\n    value: 'name',\n    label: 'Name',\n    trigger: 'update-name'\n  }, {\n    value: 'gender',\n    label: 'Gender',\n    trigger: 'update-gender'\n  }, {\n    value: 'age',\n    label: 'Age',\n    trigger: 'update-age'\n  }]\n}, {\n  id: 'update-name',\n  update: 'name',\n  trigger: '7'\n}, {\n  id: 'update-gender',\n  update: 'gender',\n  trigger: '7'\n}, {\n  id: 'update-age',\n  update: 'age',\n  trigger: '7'\n}, {\n  id: 'end-message',\n  message: 'Thanks! Your data was submitted successfully!',\n  end: true\n}];\n\nclass CvChat extends Component {\n  render() {\n    return __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, __jsx(ChatBot, {\n      steps: steps,\n      className: \"chatBot\",\n      botAvatar: \"/img/maicon.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default CvChat;","map":{"version":3,"sources":["/Users/maiconesteves/Projects/portfolio/components/CvChat.js"],"names":["React","Component","PropTypes","ChatBot","ThemeProvider","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","Review","constructor","props","state","name","gender","age","componentWillMount","steps","setState","render","width","value","propTypes","object","defaultProps","undefined","id","message","trigger","user","options","label","validator","isNaN","component","asMessage","update","end","CvChat"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,UAAU,EAAE,SADA;AAEZC,EAAAA,UAAU,EAAE,QAFA;AAGZC,EAAAA,aAAa,EAAE,SAHH;AAIZC,EAAAA,eAAe,EAAE,MAJL;AAKZC,EAAAA,cAAc,EAAE,MALJ;AAMZC,EAAAA,cAAc,EAAE,SANJ;AAOZC,EAAAA,YAAY,EAAE,MAPF;AAQZC,EAAAA,eAAe,EAAE,MARL;AASZC,EAAAA,aAAa,EAAE;AATH,CAAd;;AAYA,MAAMC,MAAN,SAAqBd,SAArB,CAA+B;AAC7Be,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKN,KAAvB;AACA,UAAM;AAAEE,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,QAAwBE,KAA9B;AAEA,SAAKC,QAAL,CAAc;AAAEL,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,KAAd;AACD;;AAGDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,QAAwB,KAAKH,KAAnC;AACA,WACE;AAAK,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,IAAI,CAACQ,KAAV,CAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,MAAM,CAACO,KAAZ,CAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,GAAG,CAACM,KAAT,CAFF,CATF,CADF,CAFF,CADF;AAqBD;;AA1C4B;;AA6C/BZ,MAAM,CAACa,SAAP,GAAmB;AACjBL,EAAAA,KAAK,EAAErB,SAAS,CAAC2B;AADA,CAAnB;AAIAd,MAAM,CAACe,YAAP,GAAsB;AACpBP,EAAAA,KAAK,EAAEQ;AADa,CAAtB;AAIA,MAAMR,KAAK,GAAG,CACV;AACES,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,OAAO,EAAE,oBAFX;AAGEC,EAAAA,OAAO,EAAE;AAHX,CADU,EAMV;AACEF,EAAAA,EAAE,EAAE,MADN;AAEEG,EAAAA,IAAI,EAAE,IAFR;AAGED,EAAAA,OAAO,EAAE;AAHX,CANU,EAWV;AACEF,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,OAAO,EAAE,0CAFX;AAGEC,EAAAA,OAAO,EAAE;AAHX,CAXU,EAgBV;AACEF,EAAAA,EAAE,EAAE,QADN;AAEEI,EAAAA,OAAO,EAAE,CACP;AAAET,IAAAA,KAAK,EAAE,MAAT;AAAiBU,IAAAA,KAAK,EAAE,MAAxB;AAAgCH,IAAAA,OAAO,EAAE;AAAzC,GADO,EAEP;AAAEP,IAAAA,KAAK,EAAE,QAAT;AAAmBU,IAAAA,KAAK,EAAE,QAA1B;AAAoCH,IAAAA,OAAO,EAAE;AAA7C,GAFO;AAFX,CAhBU,EAuBV;AACEF,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,OAAO,EAAE,kBAFX;AAGEC,EAAAA,OAAO,EAAE;AAHX,CAvBU,EA4BV;AACEF,EAAAA,EAAE,EAAE,KADN;AAEEG,EAAAA,IAAI,EAAE,IAFR;AAGED,EAAAA,OAAO,EAAE,GAHX;AAIEI,EAAAA,SAAS,EAAGX,KAAD,IAAW;AACpB,QAAIY,KAAK,CAACZ,KAAD,CAAT,EAAkB;AAChB,aAAO,wBAAP;AACD,KAFD,MAEO,IAAIA,KAAK,GAAG,CAAZ,EAAe;AACpB,aAAO,wBAAP;AACD,KAFM,MAEA,IAAIA,KAAK,GAAG,GAAZ,EAAiB;AACtB,aAAQ,GAAEA,KAAM,YAAhB;AACD;;AAED,WAAO,IAAP;AACD;AAdH,CA5BU,EA4CV;AACEK,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,OAAO,EAAE,+BAFX;AAGEC,EAAAA,OAAO,EAAE;AAHX,CA5CU,EAiDV;AACEF,EAAAA,EAAE,EAAE,QADN;AAEEQ,EAAAA,SAAS,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFb;AAGEC,EAAAA,SAAS,EAAE,IAHb;AAIEP,EAAAA,OAAO,EAAE;AAJX,CAjDU,EAuDV;AACEF,EAAAA,EAAE,EAAE,QADN;AAEEC,EAAAA,OAAO,EAAE,sCAFX;AAGEC,EAAAA,OAAO,EAAE;AAHX,CAvDU,EA4DV;AACEF,EAAAA,EAAE,EAAE,iBADN;AAEEI,EAAAA,OAAO,EAAE,CACP;AAAET,IAAAA,KAAK,EAAE,KAAT;AAAgBU,IAAAA,KAAK,EAAE,KAAvB;AAA8BH,IAAAA,OAAO,EAAE;AAAvC,GADO,EAEP;AAAEP,IAAAA,KAAK,EAAE,IAAT;AAAeU,IAAAA,KAAK,EAAE,IAAtB;AAA4BH,IAAAA,OAAO,EAAE;AAArC,GAFO;AAFX,CA5DU,EAmEV;AACEF,EAAAA,EAAE,EAAE,YADN;AAEEC,EAAAA,OAAO,EAAE,sCAFX;AAGEC,EAAAA,OAAO,EAAE;AAHX,CAnEU,EAwEV;AACEF,EAAAA,EAAE,EAAE,eADN;AAEEI,EAAAA,OAAO,EAAE,CACP;AAAET,IAAAA,KAAK,EAAE,MAAT;AAAiBU,IAAAA,KAAK,EAAE,MAAxB;AAAgCH,IAAAA,OAAO,EAAE;AAAzC,GADO,EAEP;AAAEP,IAAAA,KAAK,EAAE,QAAT;AAAmBU,IAAAA,KAAK,EAAE,QAA1B;AAAoCH,IAAAA,OAAO,EAAE;AAA7C,GAFO,EAGP;AAAEP,IAAAA,KAAK,EAAE,KAAT;AAAgBU,IAAAA,KAAK,EAAE,KAAvB;AAA8BH,IAAAA,OAAO,EAAE;AAAvC,GAHO;AAFX,CAxEU,EAgFV;AACEF,EAAAA,EAAE,EAAE,aADN;AAEEU,EAAAA,MAAM,EAAE,MAFV;AAGER,EAAAA,OAAO,EAAE;AAHX,CAhFU,EAqFV;AACEF,EAAAA,EAAE,EAAE,eADN;AAEEU,EAAAA,MAAM,EAAE,QAFV;AAGER,EAAAA,OAAO,EAAE;AAHX,CArFU,EA0FV;AACEF,EAAAA,EAAE,EAAE,YADN;AAEEU,EAAAA,MAAM,EAAE,KAFV;AAGER,EAAAA,OAAO,EAAE;AAHX,CA1FU,EA+FV;AACEF,EAAAA,EAAE,EAAE,aADN;AAEEC,EAAAA,OAAO,EAAE,+CAFX;AAGEU,EAAAA,GAAG,EAAE;AAHP,CA/FU,CAAd;;AAsGA,MAAMC,MAAN,SAAqB3C,SAArB,CAA+B;AAC7BwB,EAAAA,MAAM,GAAG;AACP,WACI,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEpB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AAAS,MAAA,KAAK,EAAEkB,KAAhB;AAAuB,MAAA,SAAS,EAAC,SAAjC;AAA2C,MAAA,SAAS,EAAC,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKD;;AAP4B;;AAU/B,eAAeqB,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ChatBot from 'react-simple-chatbot'\nimport { ThemeProvider } from 'styled-components'\n\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Roboto',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '18px',\n  botBubbleColor: '#2274A5',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n}\n\nclass Review extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      gender: '',\n      age: '',\n    };\n  }\n\n  componentWillMount() {\n    const { steps } = this.props;\n    const { name, gender, age } = steps\n\n    this.setState({ name, gender, age })\n  }\n  \n\n  render() {\n    const { name, gender, age } = this.state\n    return (\n      <div style={{ width: '100%' }}>\n        <h3>Summary</h3>\n        <table>\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{name.value}</td>\n            </tr>\n            <tr>\n              <td>Gender</td>\n              <td>{gender.value}</td>\n            </tr>\n            <tr>\n              <td>Age</td>\n              <td>{age.value}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nReview.propTypes = {\n  steps: PropTypes.object,\n}\n\nReview.defaultProps = {\n  steps: undefined,\n}\n\nconst steps = [\n    {\n      id: '1',\n      message: 'What is your name?',\n      trigger: 'name',\n    },\n    {\n      id: 'name',\n      user: true,\n      trigger: '3',\n    },\n    {\n      id: '3',\n      message: 'Hi {previousValue}! What is your gender?',\n      trigger: 'gender',\n    },\n    {\n      id: 'gender',\n      options: [\n        { value: 'male', label: 'Male', trigger: '5' },\n        { value: 'female', label: 'Female', trigger: '5' },\n      ],\n    },\n    {\n      id: '5',\n      message: 'How old are you?',\n      trigger: 'age',\n    },\n    {\n      id: 'age',\n      user: true,\n      trigger: '7',\n      validator: (value) => {\n        if (isNaN(value)) {\n          return 'value must be a number'\n        } else if (value < 0) {\n          return 'value must be positive'\n        } else if (value > 120) {\n          return `${value}? Come on!`\n        }\n\n        return true;\n      },\n    },\n    {\n      id: '7',\n      message: 'Great! Check out your summary',\n      trigger: 'review',\n    },\n    {\n      id: 'review',\n      component: <Review />,\n      asMessage: true,\n      trigger: 'update',\n    },\n    {\n      id: 'update',\n      message: 'Would you like to update some field?',\n      trigger: 'update-question',\n    },\n    {\n      id: 'update-question',\n      options: [\n        { value: 'yes', label: 'Yes', trigger: 'update-yes' },\n        { value: 'no', label: 'No', trigger: 'end-message' },\n      ],\n    },\n    {\n      id: 'update-yes',\n      message: 'What field would you like to update?',\n      trigger: 'update-fields',\n    },\n    {\n      id: 'update-fields',\n      options: [\n        { value: 'name', label: 'Name', trigger: 'update-name' },\n        { value: 'gender', label: 'Gender', trigger: 'update-gender' },\n        { value: 'age', label: 'Age', trigger: 'update-age' },\n      ],\n    },\n    {\n      id: 'update-name',\n      update: 'name',\n      trigger: '7',\n    },\n    {\n      id: 'update-gender',\n      update: 'gender',\n      trigger: '7',\n    },\n    {\n      id: 'update-age',\n      update: 'age',\n      trigger: '7',\n    },\n    {\n      id: 'end-message',\n      message: 'Thanks! Your data was submitted successfully!',\n      end: true,\n    },\n]\n\nclass CvChat extends Component {\n  render() {\n    return (\n        <ThemeProvider theme={theme}>\n            <ChatBot steps={steps} className=\"chatBot\" botAvatar=\"/img/maicon.png\" />\n        </ThemeProvider>\n    )\n  }\n}\n\nexport default CvChat"]},"metadata":{},"sourceType":"module"}