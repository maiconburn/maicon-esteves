{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/maiconesteves/Projects/portfolio/components/CvForm.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\n\nvar _dynamic = dynamic(function () {\n  return import('conversational-form');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('conversational-form')];\n    },\n    modules: ['conversational-form']\n  }\n}),\n    ConversationalForm = _dynamic.ConversationalForm;\n\nvar CvForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(CvForm, _React$Component);\n\n  var _super = _createSuper(CvForm);\n\n  function CvForm(props) {\n    var _this;\n\n    _classCallCheck(this, CvForm);\n\n    _this = _super.call(this, props);\n    _this.formFields = [{\n      'tag': 'input',\n      'type': 'text',\n      'name': 'firstname',\n      'cf-questions': 'What is your firstname?'\n    }, {\n      'tag': 'input',\n      'type': 'text',\n      'name': 'lastname',\n      'cf-questions': 'What is your lastname?'\n    }];\n    _this.submitCallback = _this.submitCallback.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CvForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.cf = ConversationalForm.startTheConversation({\n        options: {\n          submitCallback: this.submitCallback,\n          preventAutoFocus: true // loadExternalStyleSheet: false\n\n        },\n        tags: this.formFields\n      });\n      this.elem.appendChild(this.cf.el);\n    }\n  }, {\n    key: \"submitCallback\",\n    value: function submitCallback() {\n      var formDataSerialized = this.cf.getFormData(true);\n      console.log(\"Formdata, obj:\", formDataSerialized);\n      this.cf.addRobotChatResponse(\"You are done. Check the dev console for form data output.\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        ref: function ref(_ref) {\n          return _this2.elem = _ref;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return CvForm;\n}(React.Component);\n\nexport { CvForm as default };","map":{"version":3,"sources":["/Users/maiconesteves/Projects/portfolio/components/CvForm.js"],"names":["React","dynamic","ssr","ConversationalForm","CvForm","props","formFields","submitCallback","bind","cf","startTheConversation","options","preventAutoFocus","tags","elem","appendChild","el","formDataSerialized","getFormData","console","log","addRobotChatResponse","ref","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;;eAC+BA,OAAO,CAAC;AAAA,SAAM,OAAO,qBAAP,CAAN;AAAA,CAAD,EAAsC;AAACC,EAAAA,GAAG,EAAC,KAAL;AAAA;AAAA;AAAA,kCAAxB,qBAAwB;AAAA;AAAA,cAAxB,qBAAwB;AAAA;AAAA,CAAtC,C;IAA9BC,kB,YAAAA,kB;;IAEaC,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,UAAL,GAAkB,CAChB;AACE,aAAO,OADT;AAEE,cAAQ,MAFV;AAGE,cAAQ,WAHV;AAIE,sBAAgB;AAJlB,KADgB,EAOhB;AACE,aAAO,OADT;AAEE,cAAQ,MAFV;AAGE,cAAQ,UAHV;AAIE,sBAAgB;AAJlB,KAPgB,CAAlB;AAeA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AAjBiB;AAkBlB;;;;wCAEmB;AAClB,WAAKC,EAAL,GAAUN,kBAAkB,CAACO,oBAAnB,CAAwC;AAChDC,QAAAA,OAAO,EAAE;AACPJ,UAAAA,cAAc,EAAE,KAAKA,cADd;AAEPK,UAAAA,gBAAgB,EAAE,IAFX,CAGP;;AAHO,SADuC;AAMhDC,QAAAA,IAAI,EAAE,KAAKP;AANqC,OAAxC,CAAV;AAQA,WAAKQ,IAAL,CAAUC,WAAV,CAAsB,KAAKN,EAAL,CAAQO,EAA9B;AACD;;;qCAEgB;AACf,UAAIC,kBAAkB,GAAG,KAAKR,EAAL,CAAQS,WAAR,CAAoB,IAApB,CAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,kBAA9B;AACA,WAAKR,EAAL,CAAQY,oBAAR,CAA6B,2DAA7B;AACD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAE,aAAAC,IAAG;AAAA,iBAAI,MAAI,CAACR,IAAL,GAAYQ,IAAhB;AAAA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAOD;;;;EA/CiCtB,KAAK,CAACuB,S;;SAArBnB,M","sourcesContent":["import React from 'react'\nimport dynamic from 'next/dynamic'\nconst { ConversationalForm } = dynamic(() => import('conversational-form'), {ssr:false})\n\nexport default class CvForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.formFields = [\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'firstname',\n        'cf-questions': 'What is your firstname?'\n      },\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'lastname',\n        'cf-questions': 'What is your lastname?'\n      }\n    ]\n    \n    this.submitCallback = this.submitCallback.bind(this)\n  }\n  \n  componentDidMount() {\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true,\n        // loadExternalStyleSheet: false\n      },\n      tags: this.formFields\n    })\n    this.elem.appendChild(this.cf.el)\n  }\n  \n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true)\n    console.log(\"Formdata, obj:\", formDataSerialized)\n    this.cf.addRobotChatResponse(\"You are done. Check the dev console for form data output.\")\n  }\n  \n  render() {\n    return (\n      <div>\n        <div\n          ref={ref => this.elem = ref}\n        />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}