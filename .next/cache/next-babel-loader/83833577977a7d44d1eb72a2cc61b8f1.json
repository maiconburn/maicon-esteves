{"ast":null,"code":"class Hello extends React.Component {\n  constructor(props) {\n    super(props);\n    this.cf = null; // <-- Conversational Form ref\n  }\n\n  componentDidMount() {\n    // add Conversational Form info\n    this.refs.name.setAttribute('cf-questions', \"Your name?\");\n    this.refs.email.setAttribute('cf-questions', \"Your email?\");\n    this.refs.description.setAttribute('cf-questions', \"What is description?\");\n    this.cf = window.cf.ConversationalForm.startTheConversation({\n      formEl: this.refs.form,\n      context: document.getElementById(\"cf-context\"),\n      flowStepCallback: function (dto, success, error) {\n        success();\n      },\n      submitCallback: function () {\n        // this callback could also be added to the React.createElement it self...\n        alert(\"You made it!\");\n        console.log(\"Form submitted...\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement('form', {\n      id: \"form\",\n      ref: \"form\",\n      className: 'form'\n    }, React.createElement('input', {\n      type: 'text',\n      ref: \"name\",\n      placeholder: 'Name (required)',\n      defaultValue: this.props.name\n    }), React.createElement('input', {\n      type: 'email',\n      ref: \"email\",\n      placeholder: 'Email',\n      defaultValue: this.props.email\n    }), React.createElement('textarea', {\n      placeholder: 'Description',\n      ref: \"description\",\n      defaultValue: this.props.description\n    }), React.createElement('button', {\n      type: 'submit'\n    }, \"Submit\"));\n  }\n\n}\n\n;\nReactDOM.render(React.createElement(Hello, {\n  name: \"Input name..\",\n  email: \"Input email..\",\n  description: \"Input description..\"\n}), document.getElementsByClassName('form-outer')[0]);","map":{"version":3,"sources":["/Users/maiconesteves/Projects/portfolio/components/ChatResume.js"],"names":["Hello","React","Component","constructor","props","cf","componentDidMount","refs","name","setAttribute","email","description","window","ConversationalForm","startTheConversation","formEl","form","context","document","getElementById","flowStepCallback","dto","success","error","submitCallback","alert","console","log","render","createElement","id","ref","className","type","placeholder","defaultValue","ReactDOM","getElementsByClassName"],"mappings":"AACA,MAAMA,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,EAAL,GAAU,IAAV,CAFe,CAEC;AACnB;;AACDC,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKC,IAAL,CAAUC,IAAV,CAAeC,YAAf,CAA4B,cAA5B,EAA4C,YAA5C;AACA,SAAKF,IAAL,CAAUG,KAAV,CAAgBD,YAAhB,CAA6B,cAA7B,EAA6C,aAA7C;AACA,SAAKF,IAAL,CAAUI,WAAV,CAAsBF,YAAtB,CAAmC,cAAnC,EAAmD,sBAAnD;AAEA,SAAKJ,EAAL,GAAUO,MAAM,CAACP,EAAP,CAAUQ,kBAAV,CAA6BC,oBAA7B,CAAkD;AACxDC,MAAAA,MAAM,EAAE,KAAKR,IAAL,CAAUS,IADsC;AAExDC,MAAAA,OAAO,EAAEC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAF+C;AAGxDC,MAAAA,gBAAgB,EAAE,UAASC,GAAT,EAAcC,OAAd,EAAuBC,KAAvB,EAA6B;AAC3CD,QAAAA,OAAO;AACV,OALuD;AAMxDE,MAAAA,cAAc,EAAE,YAAU;AACtB;AACAC,QAAAA,KAAK,CAAC,cAAD,CAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AAVuD,KAAlD,CAAV;AAYH;;AACDC,EAAAA,MAAM,GAAG;AACL,WAAO3B,KAAK,CAAC4B,aAAN,CAAoB,MAApB,EAA4B;AAC/BC,MAAAA,EAAE,EAAE,MAD2B;AAE/BC,MAAAA,GAAG,EAAE,MAF0B;AAG/BC,MAAAA,SAAS,EAAE;AAHoB,KAA5B,EAKH/B,KAAK,CAAC4B,aAAN,CAAoB,OAApB,EAA6B;AACzBI,MAAAA,IAAI,EAAE,MADmB;AAEzBF,MAAAA,GAAG,EAAE,MAFoB;AAGzBG,MAAAA,WAAW,EAAE,iBAHY;AAIzBC,MAAAA,YAAY,EAAE,KAAK/B,KAAL,CAAWI;AAJA,KAA7B,CALG,EAWHP,KAAK,CAAC4B,aAAN,CAAoB,OAApB,EAA6B;AACzBI,MAAAA,IAAI,EAAE,OADmB;AAEzBF,MAAAA,GAAG,EAAE,OAFoB;AAGzBG,MAAAA,WAAW,EAAE,OAHY;AAIzBC,MAAAA,YAAY,EAAE,KAAK/B,KAAL,CAAWM;AAJA,KAA7B,CAXG,EAiBHT,KAAK,CAAC4B,aAAN,CAAoB,UAApB,EAAgC;AAC5BK,MAAAA,WAAW,EAAE,aADe;AAE5BH,MAAAA,GAAG,EAAE,aAFuB;AAG5BI,MAAAA,YAAY,EAAE,KAAK/B,KAAL,CAAWO;AAHG,KAAhC,CAjBG,EAsBHV,KAAK,CAAC4B,aAAN,CAAoB,QAApB,EAA8B;AAACI,MAAAA,IAAI,EAAE;AAAP,KAA9B,EAAgD,QAAhD,CAtBG,CAAP;AAwBH;;AAjDiC;;AAkDnC;AAEDG,QAAQ,CAACR,MAAT,CAAgB3B,KAAK,CAAC4B,aAAN,CAAoB7B,KAApB,EAA2B;AACzCQ,EAAAA,IAAI,EAAE,cADmC;AAEzCE,EAAAA,KAAK,EAAE,eAFkC;AAGzCC,EAAAA,WAAW,EAAE;AAH4B,CAA3B,CAAhB,EAIIO,QAAQ,CAACmB,sBAAT,CAAgC,YAAhC,EAA8C,CAA9C,CAJJ","sourcesContent":["\nclass Hello extends React.Component {\n  constructor(props) {\n      super(props);\n      this.cf = null; // <-- Conversational Form ref\n  }\n  componentDidMount(){\n      // add Conversational Form info\n      this.refs.name.setAttribute('cf-questions', \"Your name?\");\n      this.refs.email.setAttribute('cf-questions', \"Your email?\");\n      this.refs.description.setAttribute('cf-questions', \"What is description?\");\n\n      this.cf = window.cf.ConversationalForm.startTheConversation({\n          formEl: this.refs.form,\n          context: document.getElementById(\"cf-context\"),\n          flowStepCallback: function(dto, success, error){\n              success();\n          },\n          submitCallback: function(){\n              // this callback could also be added to the React.createElement it self...\n              alert(\"You made it!\")\n              console.log(\"Form submitted...\");\n          }\n      });\n  }\n  render() {\n      return React.createElement('form', {\n          id: \"form\",\n          ref: \"form\",\n          className: 'form'\n      },\n          React.createElement('input', {\n              type: 'text',\n              ref: \"name\",\n              placeholder: 'Name (required)',\n              defaultValue: this.props.name,\n          }),\n          React.createElement('input', {\n              type: 'email',\n              ref: \"email\",\n              placeholder: 'Email',\n              defaultValue: this.props.email,\n          }),\n          React.createElement('textarea', {\n              placeholder: 'Description',\n              ref: \"description\",\n              defaultValue: this.props.description,\n          }),\n          React.createElement('button', {type: 'submit'}, \"Submit\")\n      )\n  }\n};\n\nReactDOM.render(React.createElement(Hello, {\n  name: \"Input name..\",\n  email: \"Input email..\",\n  description: \"Input description..\",\n}), document.getElementsByClassName('form-outer')[0]);"]},"metadata":{},"sourceType":"script"}