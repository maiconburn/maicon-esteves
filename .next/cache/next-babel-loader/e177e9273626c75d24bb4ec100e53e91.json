{"ast":null,"code":"var _jsxFileName = \"/Users/maiconesteves/Projects/portfolio/components/CvForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport dynamic from 'next/dynamic';\nconst {\n  cf\n} = dynamic(() => import('conversational-form'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('conversational-form')],\n    modules: ['conversational-form']\n  }\n});\nexport default class CvForm extends Component {\n  constructor(props) {\n    super(props);\n    this.formFields = [{\n      'tag': 'input',\n      'type': 'text',\n      'name': 'firstname',\n      'cf-questions': 'What is your firstname?'\n    }, {\n      'tag': 'input',\n      'type': 'text',\n      'name': 'lastname',\n      'cf-questions': 'What is your lastname?'\n    }];\n    this.submitCallback = this.submitCallback.bind(this);\n  }\n\n  componentDidMount() {\n    var myForm = document.querySelector('#my-form');\n    var c = new cf.startTheConversation({\n      formEl: myForm\n    });\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true // loadExternalStyleSheet: false\n\n      },\n      tags: this.formFields\n    });\n    this.elem.appendChild(this.cf.el);\n  }\n\n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true);\n    console.log(\"Formdata, obj:\", formDataSerialized);\n    this.cf.addRobotChatResponse(\"You are done. Check the dev console for form data output.\");\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      ref: ref => this.elem = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/maiconesteves/Projects/portfolio/components/CvForm.js"],"names":["React","Component","dynamic","cf","ssr","CvForm","constructor","props","formFields","submitCallback","bind","componentDidMount","myForm","document","querySelector","c","startTheConversation","formEl","ConversationalForm","options","preventAutoFocus","tags","elem","appendChild","el","formDataSerialized","getFormData","console","log","addRobotChatResponse","render","ref"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAASD,OAAO,CAAC,MAAM,OAAO,qBAAP,CAAP,EAAsC;AAACE,EAAAA,GAAG,EAAC,KAAL;AAAA;AAAA,wCAAxB,qBAAwB;AAAA,cAAxB,qBAAwB;AAAA;AAAA,CAAtC,CAAtB;AAEA,eAAe,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC5CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,CAChB;AACE,aAAO,OADT;AAEE,cAAQ,MAFV;AAGE,cAAQ,WAHV;AAIE,sBAAgB;AAJlB,KADgB,EAOhB;AACE,aAAO,OADT;AAEE,cAAQ,MAFV;AAGE,cAAQ,UAHV;AAIE,sBAAgB;AAJlB,KAPgB,CAAlB;AAeA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAb;AACA,QAAIC,CAAC,GAAG,IAAIZ,EAAE,CAACa,oBAAP,CAA4B;AAACC,MAAAA,MAAM,EAAEL;AAAT,KAA5B,CAAR;AACA,SAAKT,EAAL,GAAUe,kBAAkB,CAACF,oBAAnB,CAAwC;AAChDG,MAAAA,OAAO,EAAE;AACPV,QAAAA,cAAc,EAAE,KAAKA,cADd;AAEPW,QAAAA,gBAAgB,EAAE,IAFX,CAGP;;AAHO,OADuC;AAMhDC,MAAAA,IAAI,EAAE,KAAKb;AANqC,KAAxC,CAAV;AAQA,SAAKc,IAAL,CAAUC,WAAV,CAAsB,KAAKpB,EAAL,CAAQqB,EAA9B;AACD;;AAEDf,EAAAA,cAAc,GAAG;AACf,QAAIgB,kBAAkB,GAAG,KAAKtB,EAAL,CAAQuB,WAAR,CAAoB,IAApB,CAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,kBAA9B;AACA,SAAKtB,EAAL,CAAQ0B,oBAAR,CAA6B,2DAA7B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAEC,GAAG,IAAI,KAAKT,IAAL,GAAYS,GAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AAjD2C","sourcesContent":["import React, {Component} from 'react'\nimport dynamic from 'next/dynamic'\nconst { cf } = dynamic(() => import('conversational-form'), {ssr:false})\n\nexport default class CvForm extends Component {\n  constructor(props) {\n    super(props)\n    this.formFields = [\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'firstname',\n        'cf-questions': 'What is your firstname?'\n      },\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'lastname',\n        'cf-questions': 'What is your lastname?'\n      }\n    ]\n    \n    this.submitCallback = this.submitCallback.bind(this)\n  }\n  \n  componentDidMount() {\n    var myForm = document.querySelector('#my-form');\n    var c = new cf.startTheConversation({formEl: myForm})\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true,\n        // loadExternalStyleSheet: false\n      },\n      tags: this.formFields\n    })\n    this.elem.appendChild(this.cf.el)\n  }\n  \n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true)\n    console.log(\"Formdata, obj:\", formDataSerialized)\n    this.cf.addRobotChatResponse(\"You are done. Check the dev console for form data output.\")\n  }\n  \n  render() {\n    return (\n      <div>\n        <div\n          ref={ref => this.elem = ref}\n        />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}