{"version":3,"file":"static/webpack/static/development/pages/resume.js.036935c2d5ca4c3e5f3c.hot-update.js","sources":["webpack:///./components/CvChat.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ChatBot from 'react-simple-chatbot'\nimport { ThemeProvider } from 'styled-components'\n\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Roboto',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '18px',\n  botBubbleColor: '#000000',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n}\n\nclass Review extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      gender: '',\n      age: '',\n    };\n  }\n\n  componentWillMount() {\n    const { steps } = this.props;\n    const { name, gender, age } = steps\n\n    this.setState({ name, gender, age })\n  }\n  \n\n  render() {\n    const { name, gender, age } = this.state\n    return (\n      <div style={{ width: '100%' }}>\n        <h3>Summary</h3>\n        <table>\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{name.value}</td>\n            </tr>\n            <tr>\n              <td>Gender</td>\n              <td>{gender.value}</td>\n            </tr>\n            <tr>\n              <td>Age</td>\n              <td>{age.value}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nReview.propTypes = {\n  steps: PropTypes.object,\n}\n\nReview.defaultProps = {\n  steps: undefined,\n}\n\nconst steps = [\n    {\n      id: '1',\n      message: 'What is your name?',\n      trigger: 'name',\n    },\n    {\n      id: 'name',\n      user: true,\n      trigger: '3',\n    },\n    {\n      id: '3',\n      message: 'Hi {previousValue}! What is your gender?',\n      trigger: 'gender',\n    },\n    {\n      id: 'gender',\n      options: [\n        { value: 'male', label: 'Male', trigger: '5' },\n        { value: 'female', label: 'Female', trigger: '5' },\n      ],\n    },\n    {\n      id: '5',\n      message: 'How old are you?',\n      trigger: 'age',\n    },\n    {\n      id: 'age',\n      user: true,\n      trigger: '7',\n      validator: (value) => {\n        if (isNaN(value)) {\n          return 'value must be a number'\n        } else if (value < 0) {\n          return 'value must be positive'\n        } else if (value > 120) {\n          return `${value}? Come on!`\n        }\n\n        return true;\n      },\n    },\n    {\n      id: '7',\n      message: 'Great! Check out your summary',\n      trigger: 'review',\n    },\n    {\n      id: 'review',\n      component: <Review />,\n      asMessage: true,\n      trigger: 'update',\n    },\n    {\n      id: 'update',\n      message: 'Would you like to update some field?',\n      trigger: 'update-question',\n    },\n    {\n      id: 'update-question',\n      options: [\n        { value: 'yes', label: 'Yes', trigger: 'update-yes' },\n        { value: 'no', label: 'No', trigger: 'end-message' },\n      ],\n    },\n    {\n      id: 'update-yes',\n      message: 'What field would you like to update?',\n      trigger: 'update-fields',\n    },\n    {\n      id: 'update-fields',\n      options: [\n        { value: 'name', label: 'Name', trigger: 'update-name' },\n        { value: 'gender', label: 'Gender', trigger: 'update-gender' },\n        { value: 'age', label: 'Age', trigger: 'update-age' },\n      ],\n    },\n    {\n      id: 'update-name',\n      update: 'name',\n      trigger: '7',\n    },\n    {\n      id: 'update-gender',\n      update: 'gender',\n      trigger: '7',\n    },\n    {\n      id: 'update-age',\n      update: 'age',\n      trigger: '7',\n    },\n    {\n      id: 'end-message',\n      message: 'Thanks! Your data was submitted successfully!',\n      end: true,\n    },\n]\n\nclass CvChat extends Component {\n  render() {\n    return (\n        <ThemeProvider theme={theme}>\n            <ChatBot steps={steps} className=\"chatBot\" botAvatar=\"/img/maicon.png\" />\n        </ThemeProvider>\n    )\n  }\n}\n\nexport default CvChat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAHA;AAQA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA1CA;AACA;AA4CA;AACA;AADA;AAIA;AACA;AADA;AAIA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AACA;AAMA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAPA;AACA;AASA;;;;A","sourceRoot":""}