{"version":3,"file":"static/webpack/static/development/pages/resume.js.4a911377956c5b2482d6.hot-update.js","sources":["webpack:///./pages/resume.js"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from \"@material-ui/core/Paper\"\nimport Layout from '../components/Layout'\nimport Typography from \"@material-ui/core/Typography\"\nimport Grid from \"@material-ui/core/Grid\"\nimport ChatBot from \"react-simple-chatbot\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(3)\n    },\n    pdfobject:{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}))\n\n\n\nfunction Resume() {\n    const classes = useStyles()\n    return (\n        <Layout>\n            <Paper elevation={5} className=\"content-paper\">\n                <Grid container>\n                    <Grid item lg={12} sm={12} xs={12} className={classes.title}>\n                        <Typography align=\"center\" variant=\"h3\" component=\"h1\">\n                            About Me\n                        </Typography>\n                        <Typography align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                            subtitle\n                        </Typography>\n                    </Grid>\n                    <Grid container lg={12}>\n                        <ChatBot\n                            steps={[\n                                {\n                                id: '1',\n                                message: 'What is your name?',\n                                trigger: 'name',\n                                },\n                                {\n                                id: 'name',\n                                user: true,\n                                trigger: '3',\n                                },\n                                {\n                                id: '3',\n                                message: 'Hi {previousValue}! What is your gender?',\n                                trigger: 'gender',\n                                },\n                                {\n                                id: 'gender',\n                                options: [\n                                    { value: 'male', label: 'Male', trigger: '5' },\n                                    { value: 'female', label: 'Female', trigger: '5' },\n                                ],\n                                },\n                                {\n                                id: '5',\n                                message: 'How old are you?',\n                                trigger: 'age',\n                                },\n                                {\n                                id: 'age',\n                                user: true,\n                                trigger: '7',\n                                validator: (value) => {\n                                    if (isNaN(value)) {\n                                    return 'value must be a number';\n                                    } else if (value < 0) {\n                                    return 'value must be positive';\n                                    } else if (value > 120) {\n                                    return `${value}? Come on!`;\n                                    }\n                    \n                                    return true;\n                                },\n                                },\n                                {\n                                id: '7',\n                                message: 'Great! Check out your summary',\n                                trigger: 'review',\n                                },\n                                {\n                                id: 'review',\n                                component: <Paper />,\n                                asMessage: true,\n                                trigger: 'update',\n                                },\n                                {\n                                id: 'update',\n                                message: 'Would you like to update some field?',\n                                trigger: 'update-question',\n                                },\n                                {\n                                id: 'update-question',\n                                options: [\n                                    { value: 'yes', label: 'Yes', trigger: 'update-yes' },\n                                    { value: 'no', label: 'No', trigger: 'end-message' },\n                                ],\n                                },\n                                {\n                                id: 'update-yes',\n                                message: 'What field would you like to update?',\n                                trigger: 'update-fields',\n                                },\n                                {\n                                id: 'update-fields',\n                                options: [\n                                    { value: 'name', label: 'Name', trigger: 'update-name' },\n                                    { value: 'gender', label: 'Gender', trigger: 'update-gender' },\n                                    { value: 'age', label: 'Age', trigger: 'update-age' },\n                                ],\n                                },\n                                {\n                                id: 'update-name',\n                                update: 'name',\n                                trigger: '7',\n                                },\n                                {\n                                id: 'update-gender',\n                                update: 'gender',\n                                trigger: '7',\n                                },\n                                {\n                                id: 'update-age',\n                                update: 'age',\n                                trigger: '7',\n                                },\n                                {\n                                id: 'end-message',\n                                message: 'Thanks! Your data was submitted successfully!',\n                                end: true,\n                                }\n                            ]}\n                        />\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Layout>           \n    )\n}\n \nexport default Resume"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AALA;AAAA;AACA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAhGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4GA;AACA;AACA;;;;A","sourceRoot":""}